package controller;

import java.sql.SQLException;

import BUS.LoaiDichVuBUS;
import DTO.LoaiDichVuDTO;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.Alert;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.stage.Stage;

public class LoaiDichVuController {
	enum Tag {
		INSERT, UPDATE
	}

	@FXML
	Label lbTieuDe;

	@FXML
	TextField tfLoaiDichVu;

	LoaiDichVuDTO loaiDichVu;

	Tag tag = Tag.INSERT;

	public void initialize(LoaiDichVuDTO loaiDichVu) {
		tag = Tag.UPDATE;
		this.loaiDichVu = loaiDichVu;
		lbTieuDe.setText("üì¶  S·ª¨A LO·∫†I D·ªäCH V·ª§");
		tfLoaiDichVu.setText(loaiDichVu.getTenLoaiDichVu());
	}

	public void handleXacNhan(ActionEvent e) {
		if (!(tfLoaiDichVu.getText().matches("^.{1,20}$"))) {
			Alert alert = new Alert(AlertType.INFORMATION);
			alert.setTitle("Th·∫•t b·∫°i!");
			alert.setHeaderText("Hi·ªáu ch·ªânh lo·∫°i d·ªãch v·ª• th·∫•t b·∫°i!");
			alert.setContentText("T√™n lo·∫°i d·ªãch v·ª• t·ªëi ƒëa 20 k√≠ t·ª±");
			alert.showAndWait();
			return;
		}

		switch (tag) {
		case INSERT: {
			try {
				LoaiDichVuDTO loaiDichVu = new LoaiDichVuDTO(tfLoaiDichVu.getText());
				if (LoaiDichVuBUS.insertLoaiDichVu(loaiDichVu)) {
					Alert alert = new Alert(AlertType.INFORMATION);
					alert.setTitle("Th√†nh c√¥ng");
					alert.setHeaderText("Th√™m th√†nh c√¥ng lo·∫°i d·ªãch v·ª• " + loaiDichVu.getTenLoaiDichVu());
					alert.showAndWait();
					MainController controller = (MainController) lbTieuDe.getScene().getUserData();
					controller.loadTableLoaiDichVu();
				} else {
					Alert alert = new Alert(AlertType.INFORMATION);
					alert.setTitle("Th·∫•t b·∫°i");
					alert.setHeaderText("Lo·∫°i d·ªãch v·ª• c·∫ßn th√™m ƒë√£ t·ªìn t·∫°i!");
					alert.setContentText("Vui l√≤ng nh·∫≠p l·∫°i lo·∫°i d·ªãch v·ª• kh√°c!");
					alert.showAndWait();
				}
				Stage stage = (Stage) lbTieuDe.getScene().getWindow();
				stage.close();
			} catch (SQLException ex) {
				ex.printStackTrace();
				Alert alert = new Alert(AlertType.INFORMATION);
				alert.setTitle("L·ªói");
				alert.setHeaderText("Kh√¥ng th·ªÉ th√™m lo·∫°i d·ªãch v·ª•!");
				alert.setContentText("L·ªói database!");
				alert.showAndWait();
			}
			break;
		}

		case UPDATE: {
			try {
				LoaiDichVuDTO newLoaiDichVu = new LoaiDichVuDTO(loaiDichVu.getMaLoaiDichVu(), tfLoaiDichVu.getText());
				if (LoaiDichVuBUS.updateLoaiDichVu(newLoaiDichVu)) {
					Alert alert = new Alert(AlertType.INFORMATION);
					alert.setTitle("Th√†nh c√¥ng");
					alert.setHeaderText("S·ª≠a th√†nh c√¥ng lo·∫°i d·ªãch v·ª• " + newLoaiDichVu.getTenLoaiDichVu());
					alert.setContentText(String.format("C√°c d·ªãch v·ª• %s s·∫Ω tr·ªü th√†nh d·ªãch v·ª• %s", loaiDichVu.getTenLoaiDichVu(), newLoaiDichVu.getTenLoaiDichVu()));
					alert.showAndWait();
					MainController controller = (MainController) lbTieuDe.getScene().getUserData();
					controller.loadTableLoaiDichVu();
					controller.loadTableDichVu();
				} else {
					Alert alert = new Alert(AlertType.INFORMATION);
					alert.setTitle("Th·∫•t b·∫°i");
					alert.setHeaderText("S·ª≠a lo·∫°i d·ªãch v·ª• ƒë√£ t·ªìn t·∫°i!");
					alert.setContentText("Vui l√≤ng nh·∫≠p l·∫°i lo·∫°i d·ªãch v·ª• kh√°c!");
					alert.showAndWait();
				}
				Stage stage = (Stage) lbTieuDe.getScene().getWindow();
				stage.close();
			} catch (SQLException ex) {
				ex.printStackTrace();
				Alert alert = new Alert(AlertType.INFORMATION);
				alert.setTitle("L·ªói");
				alert.setHeaderText("Kh√¥ng th·ªÉ s·ª≠a lo·∫°i d·ªãch v·ª•!");
				alert.setContentText("L·ªói database!");
				alert.showAndWait();
			}
			break;
		}
		}
	}

	public void handleHuyBo(ActionEvent e) {
		Stage stage = (Stage) lbTieuDe.getScene().getWindow();
		stage.close();
	}
}
